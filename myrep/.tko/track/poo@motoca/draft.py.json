{
    "patches": [
        {
            "label": "2025-10-21_19-55-34",
            "content": "@@ -382,23 +382,22 @@\n  self.__\n-assento\n+person\n : Person\n@@ -404,22 +404,16 @@\n  %7C None \n-= None\n %0A       \n@@ -473,495 +473,8 @@\n  0%0A%0A\n-    def inserirPessoa(self, person: Person) -%3E bool:%0A        if self.__assento == None:%0A            self.__assento = person%0A            return True%0A        else:%0A            print(%22fail: busy motorcycle%22)%0A            return False%0A        %0A    def remover(self) -%3E Person %7C None:%0A        if self.__assento != None:%0A            aux = self.__assento %0A            self.__assento = None%0A            return aux%0A        else:%0A            print(%22fail: empty motorcycle%22)%0A            return None%0A\n %0A   \n",
            "lines": "23"
        },
        {
            "label": "2025-10-21_20-21-10",
            "content": "@@ -110,24 +110,25 @@\n  int = age%0A%0A\n+%0A\n     def getA\n@@ -972,467 +972,8 @@\n     \n-def comprarTempo(self, time: int) -%3E None:%0A        self.__time += time%0A%0A    def dirigir(self, time:int) -%3E None:%0A        if self.__assento != None:%0A            if self.__assento.getAge() %3E 10:%0A                print(%22fail: too old to drive%22)%0A            else:%0A                if self.__time != 0:%0A                    if self.__time %3E %0A                else:%0A                    print(%22fail: buy time first%22)%0A        else:%0A            print(%22fail: empty motorcycle%22)\n+    \n",
            "lines": "39"
        },
        {
            "label": "2025-10-21_21-49-01",
            "content": "@@ -1302,1326 +1302,136 @@\n ime \n-%3C= time:%0A                        print(%22fail: time finished after %7Bself.__time%7D minutes%22)%0A                        self.__time = 0%0A                    else:%0A                        self.__time -= time%0A                else:%0A                    print(%22fail: buy time first%22)%0A        else:%0A            print(%22fail: empty motorcycle%22)%0A%0A    def honk(self) -%3E None:%0A        honk: str = %22%22%0A        for i in range(self.__power):%0A            honk += %22e%22%0A        print(honk)%0A    %0A    def getPerson(self) -%3E Person %7C None:%0A        return self.__assento%0A    %0A    def getPower(self) -%3E int:%0A        return self.__power%0A    %0A    def getTime(self) -%3E int:%0A        return self.__time%0A    %0A    def __str__(self) -%3E str:%0A        return f%22power:%7Bself.__power%7D, time:%7Bself.__time%7D, person:%7Bself.__assento%7D%22%0A    %0Adef main():%0A    moto = motinha(0)%0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(moto)%0A        elif args%5B0%5D == %22enter%22:%0A            nome = args%5B1%5D%0A            idade = int(args%5B2%5D)%0A            people = Person(nome, idade)%0A            moto.inserirPessoa(people)%0A        elif args%5B0%5D == %22init%22:%0A            power = int(args%5B1%5D)%0A            moto = motinha(power)%0A%0A%0A%0A%0Amain(\n+%3E %0A                else:%0A                    print(%22fail: buy time first%22)%0A        else:%0A            print(%22fail: empty motorcycle%22\n )\n",
            "lines": "51"
        },
        {
            "label": "2025-10-21_22-33-46",
            "content": "@@ -2120,16 +2120,17 @@\n motinha(\n+0\n )%0A    wh\n",
            "lines": "97"
        },
        {
            "label": "2025-10-21_22-34-39",
            "content": "@@ -2004,166 +2004,8 @@\n tr:%0A\n-        aux = %22%22%0A        if self.__assento != None:%0A            aux = f%22%7Bself.__assento%7D%22%0A        else:%0A            aux = %22(empty)%22%0A            %0A            %0A\n     \n@@ -2067,19 +2067,30 @@\n person:%7B\n-aux\n+self.__assento\n %7D%22%0A    %0A\n",
            "lines": "97"
        },
        {
            "label": "2025-10-21_22-41-03",
            "content": "@@ -2228,15 +2228,13 @@\n son:\n-(\n %7Baux%7D\n-)\n %22%0A  \n",
            "lines": "104"
        },
        {
            "label": "2025-10-21_22-41-32",
            "content": "@@ -2123,21 +2123,23 @@\n  aux = %22\n+(\n empty\n+)\n %22%0A      \n",
            "lines": "104"
        },
        {
            "label": "2025-10-21_22-41-48",
            "content": "@@ -2760,77 +2760,8 @@\n er)%0A\n-        elif args%5B0%5D == %22leave%22:  %0A            print(moto.remover())%0A\n %0A%0A%0A%0A\n",
            "lines": "104"
        },
        {
            "label": "2025-10-21_22-48-58",
            "content": "@@ -2803,22 +2803,22 @@\n         \n-aux = \n+print(\n moto.rem\n@@ -2827,62 +2827,8 @@\n er()\n-%0A            if aux != None:%0A                print(aux\n )%0A%0A%0A\n",
            "lines": "106"
        },
        {
            "label": "2025-10-21_22-51-03",
            "content": "@@ -2883,108 +2883,8 @@\n ux)%0A\n-        elif args%5B0%5D == buy:%0A            time = int(args%5B1%5D)%0A            moto.buyTime(time)%0A        \n %0A%0A%0A%0A\n",
            "lines": "108"
        },
        {
            "label": "2025-10-21_22-52-34",
            "content": "@@ -2907,13 +2907,11 @@\n  == \n-%22\n buy\n-%22\n :%0A  \n",
            "lines": "111"
        },
        {
            "label": "2025-10-21_22-53-00",
            "content": "@@ -2959,28 +2959,23 @@\n    moto.\n-comprarTempo\n+buyTime\n (time)%0A \n",
            "lines": "111"
        },
        {
            "label": "2025-10-21_22-53-36",
            "content": "@@ -2139,24 +2139,37 @@\n            %0A\n+            %0A\n         retu\n@@ -2990,95 +2990,10 @@\n     \n-elif args%5B0%5D == %22drive%22:%0A            time = int(args%5B1%5D)%0A            moto.dirigir(time)\n+%0A%0A\n %0A%0Ama\n",
            "lines": "111"
        },
        {
            "label": "2025-10-21_22-55-20",
            "content": "@@ -1102,124 +1102,74 @@\n f.__\n-time == 0:%0A            print(%22fail: buy time first%22)%0A            return%0A        %0A        if self.__assento == None:%0A\n+assento != None:%0A            if self.__assento.getAge() %3E 10:%0A    \n     \n@@ -1185,39 +1185,39 @@\n rint(%22fail: \n-empty motorcycl\n+too old to driv\n e%22)%0A        \n@@ -1212,38 +1212,37 @@\n e%22)%0A            \n-return\n+else:\n %0A        %0A      \n@@ -1226,33 +1226,32 @@\n   else:%0A        \n-%0A\n         if self.\n@@ -1256,103 +1256,31 @@\n f.__\n-assento.getAge() %3E 10:%0A            print(%22fail: too old to drive%22)%0A            return%0A        %0A\n+time != 0:%0A            \n     \n@@ -1307,16 +1307,28 @@\n = time:%0A\n+            \n         \n@@ -1388,16 +1388,28 @@\n nutes%22)%0A\n+            \n         \n@@ -1428,38 +1428,62 @@\n ime = 0%0A        \n-else:%0A\n+            else:%0A            \n             self\n@@ -1493,24 +1493,154 @@\n time -= time\n+%0A                else:%0A                    print(%22fail: buy time first%22)%0A        else:%0A            print(%22fail: empty motorcycle%22)\n %0A%0A    def ho\n",
            "lines": "110"
        },
        {
            "label": "2025-10-21_22-59-00",
            "content": "@@ -1449,17 +1449,16 @@\n   print(\n-f\n %22fail: t\n",
            "lines": "113"
        },
        {
            "label": "2025-10-21_22-59-28",
            "content": "@@ -1625,17 +1625,16 @@\n  str = %22\n-P\n %22%0A      \n@@ -1693,28 +1693,8 @@\n %22e%22%0A\n-        honk += %22m%22%0A\n     \n",
            "lines": "113"
        },
        {
            "label": "2025-10-21_23-00-11",
            "content": "@@ -1640,38 +1640,23 @@\n     \n-i: int = 0 %0A        while i %3C \n+for i in range(\n self\n@@ -1663,16 +1663,17 @@\n .__power\n+)\n :%0A      \n@@ -1694,27 +1694,8 @@\n %22e%22%0A\n-            i += 1%0A\n     \n",
            "lines": "114"
        },
        {
            "label": "2025-10-21_23-01-27",
            "content": "@@ -1640,23 +1640,38 @@\n     \n-for i in range(\n+i: int = 0 %0A        while i %3C \n self\n@@ -1678,17 +1678,16 @@\n .__power\n-)\n :%0A      \n@@ -1704,16 +1704,35 @@\n  += %22e%22%0A\n+            i += 1%0A\n         \n@@ -3066,63 +3066,8 @@\n me)%0A\n-        elif args%5B0%5D == %22honk%22:%0A            moto.honk()\n %0Amai\n",
            "lines": "116"
        },
        {
            "label": "2025-10-21_23-02-25",
            "content": "class Person:\n    def __init__(self, name: str, age:int):\n        self.__name: str = name\n        self.__age: int = age\n\n    def getAge(self) -> int:\n        return self.__age\n\n    def getName(self) -> str:\n        return self.__name\n    \n    def __str__(self) -> str:\n        return f\"{self.__name}:{self.__age}\"\n    \nclass motinha:\n    def __init__(self, power:int = 1):\n        self.__assento: Person | None = None\n        self.__power: int = power\n        self.__time: int = 0\n\n    def inserirPessoa(self, person: Person) -> bool:\n        if self.__assento == None:\n            self.__assento = person\n            return True\n        else:\n            print(\"fail: busy motorcycle\")\n            return False\n        \n    def remover(self) -> Person | None:\n        if self.__assento != None:\n            aux = self.__assento \n            self.__assento = None\n            return aux\n        else:\n            print(\"fail: empty motorcycle\")\n            return None\n\n    def comprarTempo(self, time: int) -> None:\n        self.__time += time\n\n    def dirigir(self, time:int) -> None:\n        if self.__time == 0:\n            print(\"fail: buy time first\")\n            return\n        \n        if self.__assento == None:\n            print(\"fail: empty motorcycle\")\n            return\n        \n        if self.__assento.getAge() > 10:\n            print(\"fail: too old to drive\")\n            return\n        \n        if self.__time <= time:\n            print(f\"fail: time finished after {self.__time} minutes\")\n            self.__time = 0\n        else:\n            self.__time -= time\n\n    def honk(self) -> None:\n        honk: str = \"P\"\n        for i in range(self.__power):\n            honk += \"e\"\n        honk += \"m\"\n        print(honk)\n    \n    def getPerson(self) -> Person | None:\n        return self.__assento\n    \n    def getPower(self) -> int:\n        return self.__power\n    \n    def getTime(self) -> int:\n        return self.__time\n    \n    def __str__(self) -> str:\n        aux = \"\"\n        if self.__assento != None:\n            aux = f\"{self.__assento}\"\n        else:\n            aux = \"empty\"\n            \n        return f\"power:{self.__power}, time:{self.__time}, person:({aux})\"\n    \ndef main():\n    moto = motinha()\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \")\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            print(moto)\n        elif args[0] == \"enter\":\n            nome = args[1]\n            idade = int(args[2])\n            people = Person(nome, idade)\n            moto.inserirPessoa(people)\n        elif args[0] == \"init\":\n            power = int(args[1])\n            moto = motinha(power)\n        elif args[0] == \"leave\":  \n            aux = moto.remover()\n            if aux != None:\n                print(aux)\n        elif args[0] == \"buy\":\n            time = int(args[1])\n            moto.comprarTempo(time)\n        elif args[0] == \"drive\":\n            time = int(args[1])\n            moto.dirigir(time)\n        elif args[0] == \"honk\":\n            moto.honk()\nmain()",
            "lines": "115"
        }
    ]
}