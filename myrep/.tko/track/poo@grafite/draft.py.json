{
    "patches": [
        {
            "label": "2025-10-24_09-14-43",
            "content": "@@ -418,711 +418,71 @@\n ize%0A\n-    %0A    #sena pelo o amor de Deus que nome %C3%A9 esse%0A    def usagepersheet(self) -%3E int:%0A        if self.__calibre == 'HB':%0A            return 1%0A        elif self.__calibre == '2B':%0A            return 2%0A        elif self.__calibre == %224B%22:%0A            return 4%0A        elif self.__calibre == %226B%22:%0A            return 6%0A        return 0%0A    %0A    def __str__(self):%0A        return f%22%7Bself.__calibre%7D:%7Bself.__hardness%7D: %7Bself.__size%7D%22%0A    %0Aclass Pencil:%0A    def __init__(self, calibre: float):%0A        self.__calibre = calibre%0A        self.__ponta: grafite %7C None%0A%0A    def HasGrafite(self) -%3E bool:%0A        if self.__ponta != None:%0A            return True%0A        else:%0A            return False%0A%0A    def\n+%0A    %0A    def __str__(self):%0A        return f%22%7Bself.__calibre%7D: %22\n",
            "lines": "21"
        },
        {
            "label": "2025-10-24_09-36-25",
            "content": "@@ -1,15 +1,15 @@\n class \n-G\n+g\n rafite:%0A\n@@ -404,32 +404,78 @@\n ize = size%0A    %0A\n+    #sena pelo o amor de Deus que nome %C3%A9 esse%0A\n     def usageper\n@@ -951,17 +951,17 @@\n _ponta: \n-G\n+g\n rafite %7C\n@@ -965,23 +965,16 @@\n e %7C None\n- = None\n %0A%0A    de\n@@ -1101,972 +1101,12 @@\n lse%0A\n-        %0A%0A    def insert(self, grafite: Grafite) -%3E bool:%0A        if self.HasGrafite():%0A            print(%22fail: calibre incompativel%22)%0A            return False%0A        if grafite.getCalibre() != self.__calibre:%0A            print(%22fail: ja existe grafite%22)%0A            return False%0A        self.__ponta = grafite%0A        return True%0A   %0A    def remove(self) -%3E Grafite %7C None:%0A        if self.HasGrafite():%0A            self.__ponta = None%0A        else:%0A            print(%22fail: nao existe grafite%22)%0A%0A    def writePage(self) -%3E None:%0A        if self.HasGrafite():%0A            grafite = self.__ponta%0A%0A    def __str__(self) -%3E str:%0A        return f%22calibre:%7Bself.__calibre%7D: grafite:%7Bself.__ponta%7D%22%0A    %0A%0Adef main():%0A    pencil = Pencil(0)%0A    while True:%0A        line: str = input(%22%22)%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        if args%5B0%5D == %22exit%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(pencil)%0A%0A%0A%0A%0Amain()%0A\n+%0A    def\n",
            "lines": "45"
        },
        {
            "label": "2025-10-25_13-52-45",
            "content": "@@ -1712,17 +1712,16 @@\n calibre:\n- \n %7Bself.__\n@@ -1728,17 +1728,17 @@\n calibre%7D\n-,\n+:\n  grafite\n@@ -1738,17 +1738,16 @@\n grafite:\n- \n %7Bself.__\n",
            "lines": "83"
        },
        {
            "label": "2025-10-25_13-53-17",
            "content": "@@ -1659,137 +1659,8 @@\n onta\n-%0A            gasto = grafite.usagepersheet()%0A            tam = grafite.getSize()%0A        else:%0A            print(%22%22)%0A            \n %0A%0A  \n",
            "lines": "83"
        },
        {
            "label": "2025-10-25_13-55-48",
            "content": "@@ -1861,12 +1861,8 @@\n ibre\n-:.1f\n %7D, g\n",
            "lines": "88"
        },
        {
            "label": "2025-10-25_14-00-49",
            "content": "@@ -1972,16 +1972,18 @@\n = input(\n+%22%22\n )%0A      \n",
            "lines": "88"
        },
        {
            "label": "2025-10-25_14-01-13",
            "content": "@@ -1623,17 +1623,8 @@\n te()\n- == False\n :%0A  \n@@ -1637,62 +1637,30 @@\n     \n-print(%22fail: tamanho insuficiente%22)%0A            return\n+grafite = self.__ponta\n %0A   \n@@ -1660,29 +1660,24 @@\n nta%0A        \n-%0A    \n     gasto = \n@@ -1676,17 +1676,17 @@\n gasto = \n-G\n+g\n rafite.u\n@@ -1712,137 +1712,115 @@\n     \n-%0A\n     \n-    \n+tam = grafite.getSize()%0A\n     \n-%0A%0A\n     \n-def __str__(self) -%3E str:%0A        aux = %22%22%0A        if self.__ponta != None:%0A            au = f%22%7Bself.__ponta%7D%22\n+else:%0A            print(%22%22)%0A            %0A%0A    def __str__(self) -%3E str:\n %0A   \n@@ -1878,11 +1878,20 @@\n e: %7B\n-aux\n+self.__ponta\n %7D%22%0A \n",
            "lines": "88"
        },
        {
            "label": "2025-10-25_14-14-08",
            "content": "@@ -1927,17 +1927,17 @@\n alibre:.\n-2\n+1\n f%7D, graf\n",
            "lines": "91"
        },
        {
            "label": "2025-10-25_14-14-25",
            "content": "@@ -1927,17 +1927,17 @@\n alibre:.\n-1\n+2\n f%7D, graf\n",
            "lines": "91"
        },
        {
            "label": "2025-10-25_14-14-33",
            "content": "@@ -1863,17 +1863,16 @@\n       au\n-x\n  = f%22%7Bse\n",
            "lines": "91"
        },
        {
            "label": "2025-10-25_14-14-47",
            "content": "@@ -1889,47 +1889,8 @@\n a%7D%22%0A\n-        else:%0A            aux = %22null%22%0A\n     \n",
            "lines": "91"
        },
        {
            "label": "2025-10-25_14-15-14",
            "content": "@@ -1965,16 +1965,20 @@\n _calibre\n+:.1f\n %7D, grafi\n",
            "lines": "93"
        },
        {
            "label": "2025-10-25_14-16-30",
            "content": "@@ -24,17 +24,16 @@\n __init__\n- \n (self, c\n",
            "lines": "93"
        },
        {
            "label": "2025-10-25_14-20-44",
            "content": "@@ -463,32 +463,31 @@\n   if self.__\n-hardness\n+calibre\n  == 'HB':%0A  \n@@ -521,32 +521,31 @@\n elif self.__\n-hardness\n+calibre\n  == '2B':%0A  \n@@ -579,32 +579,31 @@\n elif self.__\n-hardness\n+calibre\n  == %224B%22:%0A  \n@@ -641,24 +641,23 @@\n  self.__\n-hardness\n+calibre\n  == %226B%22\n@@ -1723,28 +1723,23 @@\n gasto = \n-self.__ponta\n+Grafite\n .usagepe\n@@ -2023,16 +2023,17 @@\n  Pencil(\n+0\n )%0A    wh\n",
            "lines": "93"
        },
        {
            "label": "2025-10-25_14-23-14",
            "content": "@@ -1475,35 +1475,8 @@\n ):%0A \n-          g = self.__ponta%0A\n     \n@@ -1502,36 +1502,16 @@\n  = None%0A\n-           return g%0A\n         \n@@ -1565,29 +1565,8 @@\n te%22)\n-%0A            return g\n %0A%0A  \n",
            "lines": "93"
        },
        {
            "label": "2025-10-25_14-25-32",
            "content": "@@ -1820,24 +1820,33 @@\n epersheet()%0A\n+        %0A\n             \n",
            "lines": "96"
        },
        {
            "label": "2025-10-25_14-28-07",
            "content": "@@ -1,2446 +1,169 @@\n-class Grafite:%0A    def __init__ (self, calibre:float, hardness:str, size:int ):%0A        self.__calibre = calibre%0A        self.__hardness = hardness%0A        self.__size = size%0A%0A    def getcalibre(self):%0A        return self.__calibre%0A    %0A    def getHardness(self):%0A        return self.__hardness%0A    %0A    def getSize(self):%0A        return self.__size%0A    %0A    def setSize(self, size:int):%0A        self.__size = size%0A    %0A    def usagepersheet(self) -%3E int:%0A        if self.__hardness == 'HB':%0A            return 1%0A        elif self.__hardness == '2B':%0A            return 2%0A        elif self.__hardness == %224B%22:%0A            return 4%0A        elif self.__hardness == %226B%22:%0A            return 6%0A        return 0%0A\n+@@ -2315,113 +2315,8 @@%0A il)%250A%0A-        elif args%255B0%255D == %2522init%2522:%250A\n     \n-%0A\n     \n-def __str__(self):%0A        return f%22%7Bself.__calibre%7D:%7Bself.__hardness%7D: %7Bself.__size%7D%22%0A    %0Aclass Pencil:%0A    def __init__(self, calibre: float):%0A        self.__calibre = calibre%0A        self.__ponta: Grafite %7C None = None%0A%0A    def HasGrafite(self) -%3E bool:%0A        if self.__ponta != None:%0A            return True%0A        else:%0A            return False%0A        %0A%0A    def insert(self, grafite: Grafite) -%3E bool:%0A        if self.HasGrafite():%0A            print(%22fail: calibre incompativel%22)%0A            return False%0A        if grafite.getCalibre() != self.__calibre:%0A            print(%22fail: ja existe grafite%22)%0A            return False%0A        self.__ponta = grafite%0A        return True%0A   %0A    def remove(self) -%3E Grafite %7C None:%0A        if self.HasGrafite():%0A           g = self.__ponta%0A           self.__ponta = None%0A           return g%0A        else:%0A            print(%22fail: nao existe grafite%22)%0A            return g%0A%0A    def writePage(self) -%3E None:%0A        if self.HasGrafite() == False:%0A            print(%22fail: tamanho insuficiente%22)%0A            return%0A        %0A        gasto = self.__ponta.usagepersheet()%0A            %0A%0A    def __str__(self) -%3E str:%0A        aux = %22%22%0A        if self.__ponta != None:%0A            aux = f%22%7Bself.__ponta%7D%22%0A        else:%0A            aux = %22null%22%0A        return f%22calibre: %7Bself.__calibre%7D, grafite: %7Baux%7D%22%0A    %0A%0Adef main():%0A    pencil = Pencil %7C None = None%0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        if args%5B0%5D == %22exit%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(pencil)%0A        elif args%5B0%5D == %22init%22:%0A            calibre = float(args%5B1%5D)%0A            pencil = Pencil(calibre)%0A%0A%0A%0Amain()\n+    calibre = float(args%255B1%255D)%250A            pencil = Pencil(calibre)%0A %250A%250A%250A%250A\n %0A\n",
            "lines": "4"
        },
        {
            "label": "2025-10-25_14-31-11",
            "content": "@@ -2081,17 +2081,18 @@\n   pencil\n-:\n+ =\n  Pencil \n",
            "lines": "97"
        },
        {
            "label": "2025-10-25_14-31-41",
            "content": "@@ -1628,20 +1628,17 @@\n  return \n-None\n+g\n %0A%0A    de\n@@ -2432,153 +2432,8 @@\n re)%0A\n-        elif args%5B0%5D == %22remove%22:%0A            if pencil:%0A                print(pencil.remove())%0A            else:%0A                print(%22fail%22)%0A%0A\n %0A%0A%0Am\n",
            "lines": "97"
        },
        {
            "label": "2025-10-25_14-39-10",
            "content": "@@ -1,2903 +1,674 @@\n-class Grafite:%0A    def __init__ (self, calibre:float, hardness:str, size:int ):%0A        self.__calibre = calibre%0A        self.__hardness = hardness%0A        self.__size = size%0A%0A    def getcalibre(self):%0A        return self.__calibre%0A    %0A    def getHardness(self):%0A        return self.__hardness%0A    %0A    def getSize(self):%0A        return self.__size%0A    %0A    def setSize(self, size:int):%0A        self.__size = size%0A    %0A    def usagepersheet(self) -%3E int:%0A        if self.__hardness == 'HB':%0A            return 1%0A        elif self.__hardness == '2B':%0A            return 2%0A        elif self.__hardness == %224B%22:%0A            return 4%0A        elif self.__hardness == %226B%22:%0A            return 6%0A        return 0%0A    %0A    def __str__(self):%0A        return f%22%7Bself.__calibre%7D:%7Bself.__hardness%7D: %7Bself.__size%7D%22%0A    %0Aclass Pencil:%0A    def __init__(self, calibre: float):%0A        self.__calibre = calibre%0A        self.__ponta: Grafite %7C None = None%0A%0A    def HasGrafite(self) -%3E bool:%0A        if self.__ponta != None:%0A            return True%0A        else:%0A            return False%0A        %0A%0A    def insert(self, grafite: Grafite) -%3E bool:%0A        if self.HasGrafite():%0A            print(%22fail: calibre incompativel%22)%0A            return False%0A        if grafite.getCalibre() != self.__calibre:%0A            print(%22fail: ja existe grafite%22)%0A            return False%0A        self.__ponta = grafite%0A        return True%0A   %0A    def remove(self) -%3E Grafite %7C None:%0A        if self.HasGrafite():%0A           g = self.__ponta%0A           self.__ponta = None%0A           return g%0A        else:%0A            print(%22fail: nao existe grafite%22)%0A            return None%0A%0A    def writePage(self) -%3E None:%0A        if self.HasGrafite() == False:%0A            print(%22fail: grafite nao existe%22)%0A            return%0A        if self.__ponta.getSize():%0A            print(%22fail: tamanho insuficinte%22)%0A            return%0A%0A        gasto = self.__ponta.usagepersheet()%0A        tam_A = self.__ponta.getSize()%0A%0A        if tam_A - gasto %3C 10:%0A            self.__ponta.setSize(10)%0A            print(%22fail: folha imcompleta%22)%0A            return%0A        %0A        self.__ponta.setSize(tam_A - gasto)%0A%0A            %0A%0A    def __str__(self) -%3E str:%0A        aux = %22%22%0A        if self.__ponta != None:%0A            aux = f%22%7Bself.__ponta%7D%22%0A        else:%0A            aux = %22null%22%0A        return f%22calibre: %7Bself.__calibre%7D, grafite: %7Baux%7D%22%0A    %0A%0Adef main():%0A    pencil: Pencil %7C None = None%0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        if args%5B0%5D == %22exit%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(pencil)%0A        elif args%5B0%5D == %22init%22:%0A            calibre = float(args%5B1%5D)%0A            pencil = Pencil(calibre)%0A        elif args%5B0%5D == %22remove%22:%0A            if pencil:%0A                print(pencil.remove())%0A            else:%0A                print()%0A%0A%0A%0A%0Amain()\n+@@ -1710,108 +1710,8 @@%0A se:%250A%0A-            print(%2522fail: grafite nao existe%2522)%250A            return%250A        if self.__ponta.getSize():%250A%0A     %0A@@ -1747,16 +1747,17 @@%0A insufici%0A+e%0A nte%2522)%250A  %0A@@ -1773,25 +1773,24 @@%0A  return%250A%0A-%250A%0A         %0A gasto = %0A@@ -1781,16 +1781,25 @@%0A         %0A+%250A        %0A gasto = %0A@@ -1830,233 +1830,8 @@%0A et()%0A-%250A        tam_A = self.__ponta.getSize()%250A%250A        if tam_A - gasto %253C 10:%250A            self.__ponta.setSize(10)%250A            print(%2522fail: folha imcompleta%2522)%250A            return%250A        %250A        self.__ponta.setSize(tam_A - gasto)%250A%0A %250A   %0A@@ -2567,16 +2567,22 @@%0A   print(%0A+%2522fail%2522%0A )%250A%250A%250A%250A%250Ama\n %0A\n",
            "lines": "25"
        },
        {
            "label": "2025-10-25_14-56-09",
            "content": "@@ -2563,10 +2563,11 @@\n = %22e\n-nd\n+xit\n %22:%0A \n",
            "lines": "115"
        },
        {
            "label": "2025-10-25_16-07-45",
            "content": "@@ -1180,25 +1180,28 @@\n il: \n-ja existe grafite\n+calibre incompativel\n %22)%0A \n@@ -1300,36 +1300,33 @@\n (%22fail: \n-calibre incompativel\n+ja existe grafite\n %22)%0A     \n",
            "lines": "115"
        },
        {
            "label": "2025-10-25_16-11-04",
            "content": "@@ -1243,17 +1243,17 @@\n fite.get\n-c\n+C\n alibre()\n",
            "lines": "115"
        },
        {
            "label": "2025-10-25_16-12-08",
            "content": "@@ -1783,184 +1783,185 @@\n     \n-gasto = self.__ponta.usagepersheet()%0A        tam_A = self.__ponta.getSize()%0A        %0A        if tam_A %3C gasto:%0A            print(%22fail: tamanho insuficinte%22)%0A            return\n+if self.__ponta.getSize():%0A            print(%22fail: tamanho insuficinte%22)%0A            return%0A%0A        gasto = self.__ponta.usagepersheet()%0A        tam_A = self.__ponta.getSize()\n %0A%0A  \n@@ -2058,17 +2058,17 @@\n  folha i\n-n\n+m\n completa\n",
            "lines": "115"
        },
        {
            "label": "2025-10-25_16-15-14",
            "content": "@@ -2885,15 +2885,8 @@\n int(\n-%22fail:%22\n )%0A%0A%0A\n",
            "lines": "115"
        },
        {
            "label": "2025-10-25_16-16-32",
            "content": "@@ -1931,17 +1931,16 @@\n insufici\n-e\n nte%22)%0A  \n",
            "lines": "115"
        },
        {
            "label": "2025-10-25_16-18-35",
            "content": "@@ -2143,16 +2143,30 @@\n gasto)%0A%0A\n+            %0A%0A\n     def \n@@ -2892,167 +2892,8 @@\n ail:\n- remover%22)%0A        elif args%5B0%5D == %22insert%22:%0A            if pencil:%0A                print(pencil.insert)%0A            else:%0A                print(%22fail: inserir\n %22)%0A%0A\n",
            "lines": "115"
        },
        {
            "label": "2025-10-25_16-27-10",
            "content": "@@ -2938,12 +2938,8 @@\n  if \n-not \n penc\n@@ -2961,45 +2961,86 @@\n     \n+ \n print(\n-%22fail%22)%0A               continue\n+pencil.insert)%0A            else:%0A                print(%22fail: inserir%22)\n %0A%0A%0A%0A\n",
            "lines": "118"
        },
        {
            "label": "2025-10-25_16-28-32",
            "content": "@@ -3003,110 +3003,8 @@\n nue%0A\n-            teste = Grafite(float(args%5B1%5D),(args%5B2%5D), int (args%5B3%5D))%0A            pencil.insert(teste)%0A\n %0A%0A%0A%0A\n",
            "lines": "117"
        },
        {
            "label": "2025-10-25_16-36-39",
            "content": "@@ -2356,13 +2356,11 @@\n e: %7B\n-%5B\n aux\n-%5D\n %7D%22%0A \n",
            "lines": "119"
        },
        {
            "label": "2025-10-25_16-37-12",
            "content": "@@ -2355,13 +2355,15 @@\n te: \n+%7B\n %5Baux%5D\n+%7D\n %22%0A  \n",
            "lines": "119"
        },
        {
            "label": "2025-10-25_16-37-25",
            "content": "@@ -2355,13 +2355,13 @@\n te: \n-%7Baux%7D\n+%5Baux%5D\n %22%0A  \n",
            "lines": "119"
        },
        {
            "label": "2025-10-25_16-37-33",
            "content": "@@ -2243,17 +2243,16 @@\n aux = f%22\n-%5B\n %7Bself.__\n@@ -2257,17 +2257,16 @@\n __ponta%7D\n-%5D\n %22%0A      \n",
            "lines": "119"
        },
        {
            "label": "2025-10-25_16-39-01",
            "content": "@@ -780,16 +780,17 @@\n rdness%7D:\n+ \n %7Bself.__\n",
            "lines": "119"
        },
        {
            "label": "2025-10-25_16-40-00",
            "content": "@@ -1,3058 +1,170 @@\n-class Grafite:%0A    def __init__ (self, calibre:float, hardness:str, size:int ):%0A        self.__calibre = calibre%0A        self.__hardness = hardness%0A        self.__size = size%0A%0A    def getcalibre(self):%0A        return self.__calibre%0A    %0A    def getHardness(self):%0A        return self.__hardness%0A    %0A    def getSize(self):%0A        return self.__size%0A    %0A    def setSize(self, size:int):%0A        self.__size = size%0A    %0A    def usagepersheet(self) -%3E int:%0A        if self.__hardness == 'HB':%0A            return 1%0A        elif self.__hardness == '2B':%0A            return 2%0A        elif self.__hardness == %224B%22:%0A            return 4%0A        elif self.__hardness == %226B%22:%0A            return 6%0A        return 0%0A    %0A    def __str__(self):%0A        return f%22%7Bself.__calibre%7D:%7Bself.__hardness%7D:%7Bself.__size%7D%22%0A    %0Aclass Pencil:%0A    def __init__(self, calibre: float):%0A        self.__calibre = calibre%0A        self.__ponta: Grafite %7C None = None%0A%0A    def HasGrafite(self) -%3E bool:%0A        if self.__ponta != None:%0A            return True%0A        else:%0A            return False%0A%0A    def insert(self, grafite: Grafite) -%3E bool:%0A        if self.HasGrafite():%0A            print(%22fail: ja existe grafite%22)%0A            return False%0A        if grafite.getcalibre() != self.__calibre:%0A            print(%22fail: calibre incompativel%22)%0A            return False%0A        self.__ponta = grafite%0A        return True%0A   %0A    def remove(self) -%3E Grafite %7C None:%0A        if self.HasGrafite():%0A           g = self.__ponta%0A           self.__ponta = None%0A           return g%0A        else:%0A            return None%0A%0A    def writePage(self) -%3E None:%0A        if self.HasGrafite() == False:%0A            print(%22fail: grafite nao existe%22)%0A            return%0A        gasto = self.__ponta.usagepersheet()%0A        tam_A = self.__ponta.getSize()%0A\n+@@ -1061,16 +1061,25 @@%0A rn False%0A+%250A \n        \n- \n %0A \n-       if tam_A %3C gasto:%0A            print(%22fail: tamanho insuficiente%22)%0A            return%0A%0A        if tam_A - gasto %3C 10:%0A            self.__ponta.setSize(10)%0A            print(%22fail: folha incompleta%22)%0A            return%0A        %0A        self.__ponta.setSize(tam_A - gasto)%0A%0A    def __str__(self) -%3E str:%0A        aux = %22%22%0A        if self.__ponta != None:%0A            aux = f%22%5B%7Bself.__ponta%7D%5D%22%0A        else:%0A            aux = %22null%22%0A        return f%22calibre: %7Bself.__calibre%7D, grafite: %7Baux%7D%22%0A    %0A%0Adef main():%0A    pencil: Pencil %7C None = None%0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(pencil)%0A        elif args%5B0%5D == %22init%22:%0A            calibre = float(args%5B1%5D)%0A            pencil = Pencil(calibre)%0A        elif args%5B0%5D == %22remove%22:%0A            if pencil:%0A                pencil.remove()%0A            else:%0A                print(%22fail: remover%22)%0A        elif args%5B0%5D == %22insert%22:%0A            if not pencil:%0A               print(%22fail%22)%0A               continue%0A            teste = Grafite(float(args%5B1%5D),(args%5B2%5D), int (args%5B3%5D))%0A            pencil.insert(teste)%0A%0A%0A%0A%0Amain()\n+%250A%250A    de%0A@@ -2802,24 +2802,30 @@%0A             %0A+print(%0A pencil.remov%0A@@ -2827,16 +2827,17 @@%0A remove()%0A+)%0A %250A       \n %0A\n",
            "lines": "12"
        },
        {
            "label": "2025-10-25_16-44-10",
            "content": "@@ -1557,54 +1557,8 @@\n se:%0A\n-            print(%22fail: nao existe grafite%22)%0A\n     \n",
            "lines": "117"
        },
        {
            "label": "2025-10-25_16-44-29",
            "content": "@@ -3090,161 +3090,8 @@\n te)%0A\n-        elif args%5B0%5D == %22writer%22:%0A            if pencil:%0A                pencil.writePage()%0A%0A            else:%0A                print(%22erro no escrever%22)%0A\n %0A%0A%0A%0A\n",
            "lines": "118"
        },
        {
            "label": "2025-10-25_16-47-10",
            "content": "@@ -3116,16 +3116,17 @@\n = %22write\n+r\n %22:%0A     \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-48-30",
            "content": "@@ -1712,32 +1712,40 @@\n     print(%22fail:\n+ grafite\n  nao existe graf\n@@ -1739,25 +1739,16 @@\n o existe\n- grafite \n %22)%0A     \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-48-55",
            "content": "@@ -1731,32 +1731,33 @@\n o existe grafite\n+ \n %22)%0A            r\n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-49-17",
            "content": "@@ -2044,29 +2044,25 @@\n ail:\n-tamanho insuficiente \n+ folha incompleta\n %22)%0A \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-49-37",
            "content": "@@ -2032,33 +2032,32 @@\n     print(%22fail:\n- \n tamanho insufici\n@@ -2052,32 +2052,33 @@\n nho insuficiente\n+ \n %22)%0A            r\n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-49-44",
            "content": "@@ -1909,24 +1909,28 @@\n il: \n-folha incompleta\n+tamanho insuficiente\n %22)%0A \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-50-06",
            "content": "@@ -2046,17 +2046,16 @@\n amanho i\n-2\n nsuficie\n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-50-22",
            "content": "@@ -2046,16 +2046,17 @@\n amanho i\n+2\n nsuficie\n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-50-38",
            "content": "@@ -1921,17 +1921,16 @@\n completa\n-2\n %22)%0A     \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-50-53",
            "content": "@@ -1909,28 +1909,25 @@\n il: \n-tamanho insuficiente\n+folha incompleta2\n %22)%0A \n@@ -2038,32 +2038,36 @@\n (%22fail: \n-folha incompleta\n+tamanho insuficiente\n %22)%0A     \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-55-20",
            "content": "@@ -2041,36 +2041,32 @@\n (%22fail: \n-tamanho insuficiente\n+folha incompleta\n %22)%0A     \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-55-40",
            "content": "@@ -1909,24 +1909,28 @@\n il: \n-folha incompleta\n+tamanho insuficiente\n %22)%0A \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-56-01",
            "content": "@@ -2057,17 +2057,16 @@\n ficiente\n-1\n %22)%0A     \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-56-10",
            "content": "@@ -2057,16 +2057,17 @@\n ficiente\n+1\n %22)%0A     \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-56-21",
            "content": "@@ -2037,32 +2037,36 @@\n (%22fail: \n-folha incompleta\n+tamanho insuficiente\n %22)%0A     \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_16-58-13",
            "content": "@@ -2035,28 +2035,30 @@\n nt(%22\n-tamanho insuficiente\n+fail: folha incompleta\n %22)%0A \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_17-01-14",
            "content": "@@ -2031,22 +2031,16 @@\n  print(%22\n-fail: \n tamanho \n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_17-01-26",
            "content": "@@ -2915,16 +2915,104 @@\n         \n+ if not pencil:%0A               print(%22fail%22)%0A               continue%0A            teste =\n  Grafite\n@@ -3053,16 +3053,49 @@\n gs%5B3%5D))%0A\n+            pencil.insert(teste)%0A\n         \n@@ -3135,27 +3135,114 @@\n     \n-pencil.writePage()%0A\n+if pencil:%0A                pencil.writePage()%0A%0A            else:%0A                print(%22erro no escrever%22)\n %0A%0A%0A%0A\n",
            "lines": "124"
        },
        {
            "label": "2025-10-25_17-15-18",
            "content": "@@ -2919,96 +2919,8 @@\n     \n- if not pencil:%0A               print(%22fail%22)%0A               continue%0A            teste =\n  Gra\n@@ -2969,41 +2969,8 @@\n %5D))%0A\n-            pencil.insert(teste)%0A\n     \n@@ -2994,28 +2994,24 @@\n == %22write%22:%0A\n-    \n             \n",
            "lines": "117"
        },
        {
            "label": "2025-10-25_17-15-30",
            "content": "@@ -2916,21 +2916,99 @@\n         \n-grafi\n+if not pencil:%0A               print(%22fail%22)%0A               continue%0A            tes\n te = Gra\n@@ -3057,32 +3057,52 @@\n %5D))%0A            \n+pencil.insert(teste)\n %0A        elif ar\n",
            "lines": "121"
        },
        {
            "label": "2025-10-25_17-18-23",
            "content": "@@ -2916,17 +2916,17 @@\n         \n-G\n+g\n rafite =\n",
            "lines": "118"
        },
        {
            "label": "2025-10-25_17-18-32",
            "content": "@@ -2036,16 +2036,17 @@\n t(%22fail:\n+ \n tamanho \n@@ -2920,91 +2920,13 @@\n     \n-if not pencil:%0A               print(%22fail%22)%0A               continue%0A            tes\n+Grafi\n te =\n@@ -2991,28 +2991,8 @@\n     \n-pencil.insert(teste)\n %0A   \n@@ -3058,16 +3058,17 @@\n age()%0A%0A%0A\n+%0A\n %0A%0Amain()\n",
            "lines": "118"
        },
        {
            "label": "2025-10-25_17-18-53",
            "content": "@@ -2036,17 +2036,16 @@\n t(%22fail:\n- \n tamanho \n",
            "lines": "120"
        },
        {
            "label": "2025-10-25_17-19-20",
            "content": "@@ -1905,36 +1905,32 @@\n (%22fail: \n-tamanho insuficiente\n+folha incompleta\n %22)%0A     \n",
            "lines": "120"
        },
        {
            "label": "2025-10-25_17-22-12",
            "content": "@@ -2045,13 +2045,15 @@\n il: \n-folha\n+tamanho\n  ins\n",
            "lines": "120"
        },
        {
            "label": "2025-10-25_17-22-33",
            "content": "@@ -1899,16 +1899,42 @@\n  print(%22\n+fail: tamanho insuficiente\n %22)%0A     \n",
            "lines": "120"
        },
        {
            "label": "2025-10-25_17-23-06",
            "content": "@@ -1903,28 +1903,8 @@\n nt(%22\n-tamanho insuficiente\n %22)%0A \n",
            "lines": "120"
        },
        {
            "label": "2025-10-25_17-23-23",
            "content": "@@ -1968,17 +1968,16 @@\n  gasto %3C\n-=\n  10:%0A   \n",
            "lines": "120"
        },
        {
            "label": "2025-10-25_17-23-52",
            "content": "@@ -2036,23 +2036,21 @@\n (%22fail: \n-tamanho\n+folha\n  insufic\n",
            "lines": "120"
        },
        {
            "label": "2025-10-25_17-24-15",
            "content": "@@ -1903,19 +1903,15 @@\n nt(%22\n-fail: folha\n+tamanho\n  ins\n",
            "lines": "120"
        },
        {
            "label": "2025-10-25_17-24-42",
            "content": "@@ -1757,33 +1757,24 @@\n      return%0A\n-        %0A\n         gast\n@@ -1857,39 +1857,33 @@\n     \n-if self.__ponta.getSize() %3C= 10\n+%0A        if tam_A %3C gasto\n :%0A  \n@@ -1899,16 +1899,22 @@\n  print(%22\n+fail: \n folha in\n",
            "lines": "120"
        },
        {
            "label": "2025-10-25_17-29-22",
            "content": "@@ -1981,16 +1981,17 @@\n  gasto %3C\n+=\n  10:%0A   \n",
            "lines": "120"
        },
        {
            "label": "2025-10-25_17-29-28",
            "content": "@@ -1911,36 +1911,28 @@\n     print(%22f\n-ail: tamanho\n+olha\n  insuficient\n",
            "lines": "120"
        },
        {
            "label": "2025-10-25_17-29-48",
            "content": "@@ -2060,24 +2060,28 @@\n il: \n-folha incompleta\n+tamanho insuficiente\n %22)%0A \n",
            "lines": "120"
        },
        {
            "label": "2025-10-25_17-30-22",
            "content": "class Grafite:\n    def __init__ (self, calibre:float, hardness:str, size:int ):\n        self.__calibre = calibre\n        self.__hardness = hardness\n        self.__size = size\n\n    def getcalibre(self):\n        return self.__calibre\n    \n    def getHardness(self):\n        return self.__hardness\n    \n    def getSize(self):\n        return self.__size\n    \n    def setSize(self, size:int):\n        self.__size = size\n    \n    def usagepersheet(self) -> int:\n        if self.__hardness == 'HB':\n            return 1\n        elif self.__hardness == '2B':\n            return 2\n        elif self.__hardness == \"4B\":\n            return 4\n        elif self.__hardness == \"6B\":\n            return 6\n        return 0\n    \n    def __str__(self):\n        return f\"{self.__calibre}:{self.__hardness}:{self.__size}\"\n    \nclass Pencil:\n    def __init__(self, calibre: float):\n        self.__calibre = calibre\n        self.__ponta: Grafite | None = None\n\n    def HasGrafite(self) -> bool:\n        if self.__ponta != None:\n            return True\n        else:\n            return False\n\n    def insert(self, grafite: Grafite) -> bool:\n        if self.HasGrafite():\n            print(\"fail: ja existe grafite\")\n            return False\n        if grafite.getcalibre() != self.__calibre:\n            print(\"fail: calibre incompativel\")\n            return False\n        self.__ponta = grafite\n        return True\n   \n    def remove(self) -> Grafite | None:\n        if self.HasGrafite():\n           g = self.__ponta\n           self.__ponta = None\n           return g\n        else:\n            print(\"fail: nao existe grafite\")\n            return None\n\n    def writePage(self) -> None:\n        if self.HasGrafite() == False:\n            print(\"fail: nao existe grafite\")\n            return\n        \n        gasto = self.__ponta.usagepersheet()\n        tam_A = self.__ponta.getSize()\n        if self.__ponta.getSize() <= 10:\n            print(\"fail: tamanho insuficiente\")\n            return\n\n        if tam_A - gasto < 10:\n            self.__ponta.setSize(10)\n            print(\"fail: folha incompleta\")\n            return\n        \n        self.__ponta.setSize(tam_A - gasto)\n\n    def __str__(self) -> str:\n        aux = \"\"\n        if self.__ponta != None:\n            aux = f\"[{self.__ponta}]\"\n        else:\n            aux = \"null\"\n        return f\"calibre: {self.__calibre}, grafite: {aux}\"\n    \n\ndef main():\n    pencil: Pencil | None = None\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \")\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            print(pencil)\n        elif args[0] == \"init\":\n            calibre = float(args[1])\n            pencil = Pencil(calibre)\n        elif args[0] == \"remove\":\n            if pencil:\n                pencil.remove()\n            else:\n                print(\"fail: remover\")\n        elif args[0] == \"insert\":\n            if not pencil:\n               print(\"fail\")\n               continue\n            teste = Grafite(float(args[1]),(args[2]), int (args[3]))\n            pencil.insert(teste)\n        elif args[0] == \"write\":\n                pencil.writePage()\n\n\n\n\nmain()\n",
            "lines": "120"
        }
    ]
}